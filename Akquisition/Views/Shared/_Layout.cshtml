<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <div style="margin-top:5px">
                    <img src="~/Images/logoSchwarz.gif" title="Logo" />
                </div>
            </div>

            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Startseite", "Filter", "Projekte")</li>
                    <li class="dropdown">
                            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Go To <b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Projekte Filter", "Filter", "Projekte")</li>
                                <li>@Html.ActionLink("Marktliste", "FilterVordefiniert", "Projekte", new { was = "Marktliste" }, null)</li>
                                <li>@Html.ActionLink("Produktionsliste", "FilterVordefiniert", "Projekte", new { was = "Produktionsliste" }, null)</li>
                                <li>@Html.ActionLink("Prioliste", "FilterVordefiniert", "Projekte", new { was = "Prioliste" }, null)</li>
                                <li>@Html.ActionLink("Favoriten", "Warenkorb", "Projekte")</li>
                            </ul>
                    </li>

                    @* Micha: Bereich Ausdruck auskommentiert in Version 3.0, wird nicht mehr gebraucht *@
                    @*<li class="dropdown">
                        <a href="#" data-toggle="dropdown" class="dropdown-toggle">Ausdruck <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Marktliste", "FestivalReport", "Reports")</li>
                            <li>@Html.ActionLink("Prioliste", "Prioliste", "Reports")</li>
                            <li>@Html.ActionLink("Favoriten", "Favoriten", "Reports")</li>
                            <li>@Html.ActionLink("Favoriten Marktstyle", "FavoritenMarktStyle", "Reports")</li>
                            <li class="divider"></li> 
                            <li class="dropdown-header" style="text-decoration:underline; font-size:medium">Produktionslisten</li>
                            <li>@Html.ActionLink("alles", "Produktionsliste", "Reports", new { was = 0 }, null)</li>
                            <li>@Html.ActionLink("Serien", "Produktionsliste", "Reports", new { was = 1 }, null)</li>
                            <li>@Html.ActionLink("alles außer Serien", "Produktionsliste", "Reports", new { was = 4 }, null)</li>
                            <li>@Html.ActionLink("Eigenproduktionen", "Produktionsliste", "Reports", new { was = 2 }, null)</li>
                            <li>@Html.ActionLink("Akquisition/Co-Produktionen", "Produktionsliste", "Reports", new { was = 3 }, null)</li>
                        </ul>
                    </li>*@

                    <li class="dropdown">
                        <a href="#" data-toggle="dropdown" class="dropdown-toggle">Bearbeiten <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Anbieter", "Index", "Anbieter")</li>
                            <li>@Html.ActionLink("Verleiher", "Index", "Verleih")</li>
                            <li>@Html.ActionLink("Produktionsfirmen", "Index", "Firmen")</li>
                            <li>@Html.ActionLink("Personen", "Filter", "Personen")</li>
                            <li>@Html.ActionLink("Länder", "Index", "Land")</li>
                        </ul>
                    </li>

                    <li class="dropdown">
                        <a href="#" data-toggle="dropdown" class="dropdown-toggle">Funktionen <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Marktliste zurücksetzen", "UpdateFestivalAkt", "General")</li>
                            <li>@Html.ActionLink("Favoriten bearbeiten", "Index", "Warenkorb")</li>
                        </ul>
                    </li>

                    <li>@Html.ActionLink("Impressum", "About", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p class="text-left">Tobis Film - Akquisition</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")

    <script src="~/Scripts/globalize/globalize.js"></script>
    <script src="~/Scripts/globalize/cultures/globalize.culture.@(System.Threading.Thread.CurrentThread.CurrentCulture.Name).js"></script>
    <script>
    $.validator.methods.number = function (value, element) {
        return this.optional(element) ||
            !isNaN(Globalize.parseFloat(value));
    }
    $(document).ready(function () {
        Globalize.culture('@(System.Threading.Thread.CurrentThread.CurrentCulture.Name)');
    });
    </script>
    <script>
    jQuery.extend(jQuery.validator.methods, {
        range: function (value, element, param) {
            //Use the Globalization plugin to parse the value
            var val = Globalize.parseFloat(value);
            return this.optional(element) || (
                val >= param[0] && val <= param[1]);
        }
    });
    $.validator.methods.date = function (value, element) {
        return this.optional(element) ||
            Globalize.parseDate(value) ||
            Globalize.parseDate(value, "yyyy-MM-dd");
    }
    </script>

    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
